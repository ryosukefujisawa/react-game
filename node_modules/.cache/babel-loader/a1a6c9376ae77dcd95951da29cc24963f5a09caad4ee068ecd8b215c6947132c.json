{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u85E4\\u6FA4 \\u826F\\u7950\\\\Downloads\\\\\\u7814\\u4FEE\\\\learning_fujisawa\\\\webapp\\\\game\\\\src\\\\components\\\\GameOver.tsx\";\nimport axios from 'axios';\nimport './css/GameOverStyle.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameOver = props => {\n  const handleScoreSubmit = async () => {\n    console.log(\"here\");\n    try {\n      /* スコアをサーバーに送信 -> 新しいスコアをデータベースに追加 */\n      await axios.post('http://localhost:3001/scores', {\n        name: props.userName,\n        score: props.userScore\n      });\n\n      /* フォームの入力をクリア */\n      // setUserName('名無し');\n      props.setUserScore(0);\n\n      /* 最新のスコアリストを再取得して画面に反映 */\n      const response = await axios.get('http://localhost:3001/scores');\n      props.setScores(response.data);\n    } catch (err) {\n      console.log(\"Error submitting score:\", err);\n    }\n  };\n  const Restart = () => {\n    props.setGameOver(false);\n  };\n  const Home = () => {\n    props.setGame(\"menu\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gameover\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          Restart();\n        },\n        children: \"\\u30EA\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          Home();\n        },\n        children: \"\\u30DB\\u30FC\\u30E0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = GameOver;\nexport default GameOver;\nvar _c;\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"names":["axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GameOver","props","handleScoreSubmit","console","log","post","name","userName","score","userScore","setUserScore","response","get","setScores","data","err","Restart","setGameOver","Home","setGame","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/藤澤 良祐/Downloads/研修/learning_fujisawa/webapp/game/src/components/GameOver.tsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Score } from './SnakeGame/utils/utils';\r\nimport './css/GameOverStyle.css'\r\n\r\ninterface GameOverProps {\r\n    setGameOver:  React.Dispatch<React.SetStateAction<boolean>>;\r\n    setGame:      React.Dispatch<React.SetStateAction<string>>;\r\n    setScores:    React.Dispatch<React.SetStateAction<Score[]>>;\r\n    setUserScore: React.Dispatch<React.SetStateAction<number>>;\r\n    userName:     string;\r\n    userScore:    number;\r\n}\r\n\r\nconst GameOver = (props: GameOverProps) => {\r\n\r\n    const handleScoreSubmit = async () => {\r\n        console.log(\"here\");\r\n        try {\r\n          /* スコアをサーバーに送信 -> 新しいスコアをデータベースに追加 */\r\n          await axios.post('http://localhost:3001/scores', { name: props.userName, score: props.userScore });\r\n          \r\n          /* フォームの入力をクリア */\r\n          // setUserName('名無し');\r\n          props.setUserScore(0);\r\n          \r\n          /* 最新のスコアリストを再取得して画面に反映 */\r\n          const response = await axios.get<Score[]>('http://localhost:3001/scores');\r\n          props.setScores(response.data);\r\n        }\r\n        catch (err) {\r\n          console.log(\"Error submitting score:\", err);\r\n        }\r\n    };\r\n\r\n    const Restart = () => {\r\n        props.setGameOver(false);\r\n    };\r\n\r\n    const Home = () => {\r\n        props.setGame(\"menu\");\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"gameover\">\r\n                <h1>Game Over!</h1>\r\n                <button onClick={() => {Restart()}}>リスタート</button>\r\n                <button onClick={() => {Home()}}>ホーム</button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GameOver;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAWhC,MAAMC,QAAQ,GAAIC,KAAoB,IAAK;EAEvC,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,IAAI;MACF;MACA,MAAMT,KAAK,CAACU,IAAI,CAAC,8BAA8B,EAAE;QAAEC,IAAI,EAAEL,KAAK,CAACM,QAAQ;QAAEC,KAAK,EAAEP,KAAK,CAACQ;MAAU,CAAC,CAAC;;MAElG;MACA;MACAR,KAAK,CAACS,YAAY,CAAC,CAAC,CAAC;;MAErB;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAU,8BAA8B,CAAC;MACzEX,KAAK,CAACY,SAAS,CAACF,QAAQ,CAACG,IAAI,CAAC;IAChC,CAAC,CACD,OAAOC,GAAG,EAAE;MACVZ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEW,GAAG,CAAC;IAC7C;EACJ,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClBf,KAAK,CAACgB,WAAW,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;IACfjB,KAAK,CAACkB,OAAO,CAAC,MAAM,CAAC;EACzB,CAAC;EAKD,oBACItB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACIvB,OAAA;MAAKwB,EAAE,EAAC,UAAU;MAAAD,QAAA,gBACdvB,OAAA;QAAAuB,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB5B,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAM;UAACV,OAAO,CAAC,CAAC;QAAA,CAAE;QAAAI,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClD5B,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAM;UAACR,IAAI,CAAC,CAAC;QAAA,CAAE;QAAAE,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC,gBACR,CAAC;AAEX,CAAC;AAACE,EAAA,GAzCI3B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}