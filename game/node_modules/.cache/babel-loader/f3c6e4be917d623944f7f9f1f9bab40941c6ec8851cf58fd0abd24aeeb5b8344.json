{"ast":null,"code":"import{useState,useEffect}from'react';import{useKey}from'react-use';import SnakeBoard from'./SnakeBoard';import GameOver from'../GameOver';import{generateFoodPosition,initialSnake,moveSnake}from'./utils/utils';import'../css/SnakeGame.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SnakeGame=props=>{const[snake,setSnake]=useState(initialSnake);const[direction,setDirection]=useState('STOP');const[food,setFood]=useState(generateFoodPosition);const[gameover,setGameOver]=useState(false);const[intervalTime,setIntervalTime]=useState(200);const[hitCount,setHitCount]=useState(0);useEffect(()=>{const interval=setInterval(()=>moveSnake(direction,snake,food,intervalTime,hitCount,setSnake,setFood,setGameOver,setIntervalTime,setDirection,setHitCount,props.setUserScore),intervalTime);return()=>clearInterval(interval);},[direction,snake]);const handleKeyPress=(newDirection,e)=>{e.preventDefault();setDirection(prevDirection=>{if(prevDirection==='UP'&&newDirection==='DOWN'||prevDirection==='DOWN'&&newDirection==='UP'||prevDirection==='LEFT'&&newDirection==='RIGHT'||prevDirection==='RIGHT'&&newDirection==='LEFT'){// Ignore the key press if it's the opposite direction\n// console.log(newDirection);\nreturn prevDirection;}return newDirection;});// setDirection(newDirection);\n};useKey('ArrowUp',e=>handleKeyPress('UP',e));useKey('ArrowDown',e=>handleKeyPress('DOWN',e));useKey('ArrowLeft',e=>handleKeyPress('LEFT',e));useKey('ArrowRight',e=>handleKeyPress('RIGHT',e));return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{id:\"moveSnake\"// tabIndex={0}\n,children:[/*#__PURE__*/_jsx(\"h1\",{id:\"SnakeTitle\",children:\"Snake Game\"}),/*#__PURE__*/_jsxs(\"div\",{children:[!gameover?/*#__PURE__*/_jsx(SnakeBoard,{snake:snake,food:food,direction:direction}):/*#__PURE__*/_jsx(GameOver,{setGameOver:setGameOver,setGame:props.setGame,setScores:props.setScores,setUserScore:props.setUserScore,userName:props.userName,userScore:props.userScore}),/*#__PURE__*/_jsxs(\"p\",{className:\"nowScore\",children:[\"Score : \",props.userScore]})]})]})});};export default SnakeGame;","map":{"version":3,"names":["useState","useEffect","useKey","SnakeBoard","GameOver","generateFoodPosition","initialSnake","moveSnake","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SnakeGame","props","snake","setSnake","direction","setDirection","food","setFood","gameover","setGameOver","intervalTime","setIntervalTime","hitCount","setHitCount","interval","setInterval","setUserScore","clearInterval","handleKeyPress","newDirection","e","preventDefault","prevDirection","children","id","setGame","setScores","userName","userScore","className"],"sources":["C:/Users/藤澤 良祐/Downloads/研修/react-game/game/src/components/SnakeGame/SnakeGame.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useKey } from 'react-use';\r\nimport SnakeBoard from './SnakeBoard';\r\nimport GameOver from '../GameOver';\r\nimport { \r\n    CELL_SIZE, \r\n    generateFoodPosition, \r\n    initialSnake, \r\n    moveSnake, \r\n    Direction, \r\n    Position,\r\n    Score\r\n} from './utils/utils';\r\nimport '../css/SnakeGame.css'\r\n\r\n\r\n\r\n\r\ninterface SnakeGameProps {\r\n    setGame:      React.Dispatch<React.SetStateAction<string>>;\r\n    setScores:    React.Dispatch<React.SetStateAction<Score[]>>\r\n    setUserScore: React.Dispatch<React.SetStateAction<number>>;\r\n    userScore:    number;\r\n    userName:     string;\r\n}\r\n\r\nconst SnakeGame = (props: SnakeGameProps) => {\r\n    const [snake, setSnake] = useState<Position[]>(initialSnake);\r\n    const [direction, setDirection] = useState<Direction>('STOP');\r\n    const [food, setFood] = useState<Position>(generateFoodPosition);\r\n    const [gameover, setGameOver] = useState<boolean>(false);\r\n    const [intervalTime, setIntervalTime] = useState<number>(200);\r\n    const [hitCount, setHitCount] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => moveSnake(\r\n            direction, \r\n            snake,\r\n            food,\r\n            intervalTime,\r\n            hitCount,\r\n            setSnake, \r\n            setFood, \r\n            setGameOver,\r\n            setIntervalTime,\r\n            setDirection,\r\n            setHitCount,\r\n            props.setUserScore,\r\n        ), intervalTime);\r\n        return () => clearInterval(interval);\r\n    }, [direction, snake]);\r\n\r\n\r\n    const handleKeyPress = (newDirection: Direction, e: KeyboardEvent) => {\r\n        e.preventDefault();\r\n        setDirection((prevDirection )=> {\r\n            if (\r\n            (prevDirection === 'UP' && newDirection === 'DOWN') ||\r\n            (prevDirection === 'DOWN' && newDirection === 'UP') ||\r\n            (prevDirection === 'LEFT' && newDirection === 'RIGHT') ||\r\n            (prevDirection === 'RIGHT' && newDirection === 'LEFT')\r\n            ) {\r\n            // Ignore the key press if it's the opposite direction\r\n            // console.log(newDirection);\r\n            return prevDirection;\r\n            }\r\n            return newDirection;\r\n        });\r\n        // setDirection(newDirection);\r\n    };\r\n    \r\n    useKey('ArrowUp',    (e) => handleKeyPress('UP',    e as KeyboardEvent));\r\n    useKey('ArrowDown',  (e) => handleKeyPress('DOWN',  e as KeyboardEvent));\r\n    useKey('ArrowLeft',  (e) => handleKeyPress('LEFT',  e as KeyboardEvent));\r\n    useKey('ArrowRight', (e) => handleKeyPress('RIGHT', e as KeyboardEvent));  \r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                id=\"moveSnake\"\r\n                // tabIndex={0}\r\n            >\r\n                <h1 id=\"SnakeTitle\">Snake Game</h1>\r\n                <div>\r\n\r\n                    { !gameover ?\r\n                        <SnakeBoard snake={snake} food={food} direction={direction}/>  :\r\n                        <GameOver \r\n                            setGameOver={setGameOver} \r\n                            setGame={props.setGame}\r\n                            setScores={props.setScores}\r\n                            setUserScore={props.setUserScore}\r\n                            userName={props.userName}\r\n                            userScore={props.userScore}\r\n                        />\r\n                    }\r\n                    <p className=\"nowScore\">Score : {props.userScore}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default SnakeGame;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,MAAM,KAAQ,WAAW,CAClC,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,QAAQ,KAAM,aAAa,CAClC,OAEIC,oBAAoB,CACpBC,YAAY,CACZC,SAAS,KAIN,eAAe,CACtB,MAAO,sBAAsB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAa7B,KAAM,CAAAC,SAAS,CAAIC,KAAqB,EAAK,CACzC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAaM,YAAY,CAAC,CAC5D,KAAM,CAACY,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAY,MAAM,CAAC,CAC7D,KAAM,CAACoB,IAAI,CAAEC,OAAO,CAAC,CAAGrB,QAAQ,CAAWK,oBAAoB,CAAC,CAChE,KAAM,CAACiB,QAAQ,CAAEC,WAAW,CAAC,CAAGvB,QAAQ,CAAU,KAAK,CAAC,CACxD,KAAM,CAACwB,YAAY,CAAEC,eAAe,CAAC,CAAGzB,QAAQ,CAAS,GAAG,CAAC,CAC7D,KAAM,CAAC0B,QAAQ,CAAEC,WAAW,CAAC,CAAG3B,QAAQ,CAAS,CAAC,CAAC,CAEnDC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAA2B,QAAQ,CAAGC,WAAW,CAAC,IAAMtB,SAAS,CACxCW,SAAS,CACTF,KAAK,CACLI,IAAI,CACJI,YAAY,CACZE,QAAQ,CACRT,QAAQ,CACRI,OAAO,CACPE,WAAW,CACXE,eAAe,CACfN,YAAY,CACZQ,WAAW,CACXZ,KAAK,CAACe,YACV,CAAC,CAAEN,YAAY,CAAC,CAChB,MAAO,IAAMO,aAAa,CAACH,QAAQ,CAAC,CACxC,CAAC,CAAE,CAACV,SAAS,CAAEF,KAAK,CAAC,CAAC,CAGtB,KAAM,CAAAgB,cAAc,CAAGA,CAACC,YAAuB,CAAEC,CAAgB,GAAK,CAClEA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBhB,YAAY,CAAEiB,aAAa,EAAK,CAC5B,GACCA,aAAa,GAAK,IAAI,EAAIH,YAAY,GAAK,MAAM,EACjDG,aAAa,GAAK,MAAM,EAAIH,YAAY,GAAK,IAAK,EAClDG,aAAa,GAAK,MAAM,EAAIH,YAAY,GAAK,OAAQ,EACrDG,aAAa,GAAK,OAAO,EAAIH,YAAY,GAAK,MAAO,CACpD,CACF;AACA;AACA,MAAO,CAAAG,aAAa,CACpB,CACA,MAAO,CAAAH,YAAY,CACvB,CAAC,CAAC,CACF;AACJ,CAAC,CAED/B,MAAM,CAAC,SAAS,CAAMgC,CAAC,EAAKF,cAAc,CAAC,IAAI,CAAKE,CAAkB,CAAC,CAAC,CACxEhC,MAAM,CAAC,WAAW,CAAIgC,CAAC,EAAKF,cAAc,CAAC,MAAM,CAAGE,CAAkB,CAAC,CAAC,CACxEhC,MAAM,CAAC,WAAW,CAAIgC,CAAC,EAAKF,cAAc,CAAC,MAAM,CAAGE,CAAkB,CAAC,CAAC,CACxEhC,MAAM,CAAC,YAAY,CAAGgC,CAAC,EAAKF,cAAc,CAAC,OAAO,CAAEE,CAAkB,CAAC,CAAC,CAGxE,mBACIzB,IAAA,CAAAI,SAAA,EAAAwB,QAAA,cACI1B,KAAA,QACI2B,EAAE,CAAC,WACH;AAAA,CAAAD,QAAA,eAEA5B,IAAA,OAAI6B,EAAE,CAAC,YAAY,CAAAD,QAAA,CAAC,YAAU,CAAI,CAAC,cACnC1B,KAAA,QAAA0B,QAAA,EAEM,CAACf,QAAQ,cACPb,IAAA,CAACN,UAAU,EAACa,KAAK,CAAEA,KAAM,CAACI,IAAI,CAAEA,IAAK,CAACF,SAAS,CAAEA,SAAU,CAAC,CAAC,cAC7DT,IAAA,CAACL,QAAQ,EACLmB,WAAW,CAAEA,WAAY,CACzBgB,OAAO,CAAExB,KAAK,CAACwB,OAAQ,CACvBC,SAAS,CAAEzB,KAAK,CAACyB,SAAU,CAC3BV,YAAY,CAAEf,KAAK,CAACe,YAAa,CACjCW,QAAQ,CAAE1B,KAAK,CAAC0B,QAAS,CACzBC,SAAS,CAAE3B,KAAK,CAAC2B,SAAU,CAC9B,CAAC,cAEN/B,KAAA,MAAGgC,SAAS,CAAC,UAAU,CAAAN,QAAA,EAAC,UAAQ,CAACtB,KAAK,CAAC2B,SAAS,EAAI,CAAC,EACpD,CAAC,EAEL,CAAC,CACR,CAAC,CAEX,CAAC,CAGD,cAAe,CAAA5B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}