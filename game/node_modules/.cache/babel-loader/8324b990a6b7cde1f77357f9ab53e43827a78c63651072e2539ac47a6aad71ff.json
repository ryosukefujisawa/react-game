{"ast":null,"code":"// export const gameover = false;\n\nexport const CELL_SIZE = 20;\nexport const initialSnake = [{\n  x: 5,\n  y: 5\n}];\nexport const generateFoodPosition = () => {\n  return {\n    x: Math.floor(Math.random() * CELL_SIZE),\n    y: Math.floor(Math.random() * CELL_SIZE)\n  };\n};\nexport const moveSnake = (direction, snake, food, setSnake, setFood, setGameOver) => {\n  let newSnake = [...snake];\n  let head = {\n    ...newSnake[0]\n  };\n  switch (direction) {\n    case 'UP':\n      if (direction !== 'DOWN') {\n        head.y -= 1;\n      }\n      break;\n    case 'DOWN':\n      head.y += 1;\n      break;\n    case 'LEFT':\n      head.x -= 1;\n      break;\n    case 'RIGHT':\n      head.x += 1;\n      break;\n    default:\n      break;\n  }\n  if (head.x < 0 || head.y < 0 || head.x >= CELL_SIZE || head.y >= CELL_SIZE) {\n    setSnake(initialSnake);\n    setGameOver(true);\n    return;\n  }\n  if (head.x === food.x && head.y === food.y) {\n    newSnake.unshift({\n      ...head\n    });\n    setFood(generateFoodPosition());\n  } else {\n    newSnake.pop();\n  }\n  newSnake.unshift(head);\n  setSnake(newSnake);\n};","map":{"version":3,"names":["CELL_SIZE","initialSnake","x","y","generateFoodPosition","Math","floor","random","moveSnake","direction","snake","food","setSnake","setFood","setGameOver","newSnake","head","unshift","pop"],"sources":["C:/Users/藤澤 良祐/Downloads/研修/learning_fujisawa/webapp/game/src/components/SnakeGame/utils/utils.ts"],"sourcesContent":["// export const gameover = false;\r\n\r\nexport const CELL_SIZE = 20;\r\n\r\nexport interface Position {\r\n    x: number,\r\n    y: number\r\n}\r\nexport type Direction = 'UP' | 'DOWN' | 'LEFT' | 'RIGHT';\r\n\r\nexport const initialSnake: Position[] = [{x: 5, y: 5 }];\r\n\r\nexport const generateFoodPosition = (): Position => {\r\n    return {\r\n        x: Math.floor(Math.random() * CELL_SIZE),\r\n        y: Math.floor(Math.random() * CELL_SIZE)\r\n    };\r\n};\r\n\r\n\r\nexport const moveSnake = (\r\n    direction: Direction,\r\n    snake: Position[],\r\n    food: Position,\r\n    setSnake: React.Dispatch<React.SetStateAction<Position[]>>,\r\n    setFood: React.Dispatch<React.SetStateAction<Position>>,\r\n    setGameOver: Function //React.Dispatch<React.SetStateAction<boolean>>\r\n  ) => {\r\n    let newSnake = [...snake];\r\n    let head = { ...newSnake[0] };\r\n  \r\n    switch (direction) {\r\n      case 'UP':\r\n        if (direction !== 'DOWN') { \r\n            head.y -= 1;\r\n        }\r\n        break;\r\n      case 'DOWN':\r\n        head.y += 1;\r\n        break;\r\n      case 'LEFT':\r\n        head.x -= 1;\r\n        break;\r\n      case 'RIGHT':\r\n        head.x += 1;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (head.x < 0 || head.y < 0 || head.x >= CELL_SIZE || head.y >= CELL_SIZE) {\r\n        setSnake(initialSnake);\r\n        setGameOver(true);\r\n        return ;\r\n    }\r\n\r\n    if (head.x === food.x && head.y === food.y) {\r\n        newSnake.unshift({ ...head });\r\n        setFood(generateFoodPosition());\r\n    } else {\r\n        newSnake.pop();\r\n    }\r\n\r\n    newSnake.unshift(head);\r\n    setSnake(newSnake);\r\n\r\n};"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,SAAS,GAAG,EAAE;AAQ3B,OAAO,MAAMC,YAAwB,GAAG,CAAC;EAACC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE;AAAE,CAAC,CAAC;AAEvD,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAgB;EAChD,OAAO;IACHF,CAAC,EAAEG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,SAAS,CAAC;IACxCG,CAAC,EAAEE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,SAAS;EAC3C,CAAC;AACL,CAAC;AAGD,OAAO,MAAMQ,SAAS,GAAGA,CACrBC,SAAoB,EACpBC,KAAiB,EACjBC,IAAc,EACdC,QAA0D,EAC1DC,OAAuD,EACvDC,WAAqB,KAClB;EACH,IAAIC,QAAQ,GAAG,CAAC,GAAGL,KAAK,CAAC;EACzB,IAAIM,IAAI,GAAG;IAAE,GAAGD,QAAQ,CAAC,CAAC;EAAE,CAAC;EAE7B,QAAQN,SAAS;IACf,KAAK,IAAI;MACP,IAAIA,SAAS,KAAK,MAAM,EAAE;QACtBO,IAAI,CAACb,CAAC,IAAI,CAAC;MACf;MACA;IACF,KAAK,MAAM;MACTa,IAAI,CAACb,CAAC,IAAI,CAAC;MACX;IACF,KAAK,MAAM;MACTa,IAAI,CAACd,CAAC,IAAI,CAAC;MACX;IACF,KAAK,OAAO;MACVc,IAAI,CAACd,CAAC,IAAI,CAAC;MACX;IACF;MACE;EACJ;EAEA,IAAIc,IAAI,CAACd,CAAC,GAAG,CAAC,IAAIc,IAAI,CAACb,CAAC,GAAG,CAAC,IAAIa,IAAI,CAACd,CAAC,IAAIF,SAAS,IAAIgB,IAAI,CAACb,CAAC,IAAIH,SAAS,EAAE;IACxEY,QAAQ,CAACX,YAAY,CAAC;IACtBa,WAAW,CAAC,IAAI,CAAC;IACjB;EACJ;EAEA,IAAIE,IAAI,CAACd,CAAC,KAAKS,IAAI,CAACT,CAAC,IAAIc,IAAI,CAACb,CAAC,KAAKQ,IAAI,CAACR,CAAC,EAAE;IACxCY,QAAQ,CAACE,OAAO,CAAC;MAAE,GAAGD;IAAK,CAAC,CAAC;IAC7BH,OAAO,CAACT,oBAAoB,CAAC,CAAC,CAAC;EACnC,CAAC,MAAM;IACHW,QAAQ,CAACG,GAAG,CAAC,CAAC;EAClB;EAEAH,QAAQ,CAACE,OAAO,CAACD,IAAI,CAAC;EACtBJ,QAAQ,CAACG,QAAQ,CAAC;AAEtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}