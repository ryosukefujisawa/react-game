{"ast":null,"code":"import{useEffect}from'react';import axios from'axios';import'./css/GameOverStyle.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const GameOver=props=>{const handleScoreSubmit=async()=>{try{/* スコアをサーバーに送信 -> 新しいスコアをデータベースに追加 */await axios.post('http://localhost:3001/scores',{name:props.userName,score:props.userScore});/* フォームの入力をクリア */ // setUserName('名無し');\n/* 最新のスコアリストを再取得して画面に反映 */const response=await axios.get('http://localhost:3001/scores');props.setScores(response.data);}catch(err){console.log(\"Error submitting score:\",err);}};const Restart=()=>{props.setGameOver(false);};const Home=()=>{props.setGame(\"menu\");};useEffect(()=>{handleScoreSubmit();},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{id:\"gameover\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Game Over!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{Restart();props.setUserScore(0);},children:\"\\u30EA\\u30B9\\u30BF\\u30FC\\u30C8\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{Home();props.setUserScore(0);},children:\"\\u30DB\\u30FC\\u30E0\"})]})});};export default GameOver;","map":{"version":3,"names":["useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GameOver","props","handleScoreSubmit","post","name","userName","score","userScore","response","get","setScores","data","err","console","log","Restart","setGameOver","Home","setGame","children","id","onClick","setUserScore"],"sources":["C:/Users/藤澤 良祐/Downloads/研修/learning_fujisawa/webapp/game/src/components/GameOver.tsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Score } from './SnakeGame/utils/utils';\r\nimport './css/GameOverStyle.css'\r\n\r\ninterface GameOverProps {\r\n    setGameOver:  React.Dispatch<React.SetStateAction<boolean>>;\r\n    setGame:      React.Dispatch<React.SetStateAction<string>>;\r\n    setScores:    React.Dispatch<React.SetStateAction<Score[]>>;\r\n    setUserScore: React.Dispatch<React.SetStateAction<number>>;\r\n    userName:     string;\r\n    userScore:    number;\r\n}\r\n\r\nconst GameOver = (props: GameOverProps) => {\r\n\r\n    const handleScoreSubmit = async () => {\r\n        try {\r\n          /* スコアをサーバーに送信 -> 新しいスコアをデータベースに追加 */\r\n          await axios.post('http://localhost:3001/scores', { name: props.userName, score: props.userScore });\r\n          \r\n          /* フォームの入力をクリア */\r\n          // setUserName('名無し');\r\n          \r\n          /* 最新のスコアリストを再取得して画面に反映 */\r\n          const response = await axios.get<Score[]>('http://localhost:3001/scores');\r\n          props.setScores(response.data);\r\n        }\r\n        catch (err) {\r\n          console.log(\"Error submitting score:\", err);\r\n        }\r\n    };\r\n\r\n    const Restart = () => {\r\n        props.setGameOver(false);\r\n    };\r\n\r\n    const Home = () => {\r\n        props.setGame(\"menu\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleScoreSubmit();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"gameover\">\r\n                <h1>Game Over!</h1>\r\n                <button onClick={() => {Restart(); props.setUserScore(0);}}>リスタート</button>\r\n                <button onClick={() => {Home();    props.setUserScore(0);}}>ホーム</button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GameOver;"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,MAAO,yBAAyB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAWhC,KAAM,CAAAC,QAAQ,CAAIC,KAAoB,EAAK,CAEvC,KAAM,CAAAC,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACF,qCACA,KAAM,CAAAT,KAAK,CAACU,IAAI,CAAC,8BAA8B,CAAE,CAAEC,IAAI,CAAEH,KAAK,CAACI,QAAQ,CAAEC,KAAK,CAAEL,KAAK,CAACM,SAAU,CAAC,CAAC,CAElG,kBACA;AAEA,0BACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,KAAK,CAACgB,GAAG,CAAU,8BAA8B,CAAC,CACzER,KAAK,CAACS,SAAS,CAACF,QAAQ,CAACG,IAAI,CAAC,CAChC,CACA,MAAOC,GAAG,CAAE,CACVC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEF,GAAG,CAAC,CAC7C,CACJ,CAAC,CAED,KAAM,CAAAG,OAAO,CAAGA,CAAA,GAAM,CAClBd,KAAK,CAACe,WAAW,CAAC,KAAK,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACfhB,KAAK,CAACiB,OAAO,CAAC,MAAM,CAAC,CACzB,CAAC,CAED1B,SAAS,CAAC,IAAM,CACZU,iBAAiB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAGN,mBACIP,IAAA,CAAAI,SAAA,EAAAoB,QAAA,cACItB,KAAA,QAAKuB,EAAE,CAAC,UAAU,CAAAD,QAAA,eACdxB,IAAA,OAAAwB,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBxB,IAAA,WAAQ0B,OAAO,CAAEA,CAAA,GAAM,CAACN,OAAO,CAAC,CAAC,CAAEd,KAAK,CAACqB,YAAY,CAAC,CAAC,CAAC,CAAC,CAAE,CAAAH,QAAA,CAAC,gCAAK,CAAQ,CAAC,cAC1ExB,IAAA,WAAQ0B,OAAO,CAAEA,CAAA,GAAM,CAACJ,IAAI,CAAC,CAAC,CAAKhB,KAAK,CAACqB,YAAY,CAAC,CAAC,CAAC,CAAC,CAAE,CAAAH,QAAA,CAAC,oBAAG,CAAQ,CAAC,EACvE,CAAC,CACR,CAAC,CAEX,CAAC,CAED,cAAe,CAAAnB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}