{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u85E4\\u6FA4 \\u826F\\u7950\\\\Downloads\\\\\\u7814\\u4FEE\\\\learning_fujisawa\\\\webapp\\\\game\\\\src\\\\components\\\\SnakeGame\\\\SnakeBoard.tsx\";\nimport { CELL_SIZE } from './utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeBoard = ({\n  snake,\n  food,\n  direction\n}) => {\n  const renderBoard = () => {\n    let rows = [];\n    for (let row = 0; row < CELL_SIZE; row++) {\n      let cells = [];\n      for (let col = 0; col < CELL_SIZE; col++) {\n        let isSnake = snake.some(s => s.x === col && s.y === row);\n        let isFood = food.x === col && food.y === row;\n        let isSnakeHead = snake[0].x === col && snake[0].y === row;\n        let className = 'boardBlock ';\n        if (isSnake) {\n          className += 'snake ';\n          if (isSnakeHead) {\n            className += 'snakeHead ';\n            className += direction;\n          }\n        } else if (isFood) {\n          className += 'food ';\n        }\n        cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: className\n        }, `${col}-${row}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this));\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rows\",\n        children: cells\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }, this));\n    }\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"snakeGameContents\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"board\",\n      style: {\n        '--cell-size': `${CELL_SIZE * 40}px`\n      },\n      children: renderBoard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c = SnakeBoard;\nexport default SnakeBoard;\nvar _c;\n$RefreshReg$(_c, \"SnakeBoard\");","map":{"version":3,"names":["CELL_SIZE","jsxDEV","_jsxDEV","SnakeBoard","snake","food","direction","renderBoard","rows","row","cells","col","isSnake","some","s","x","y","isFood","isSnakeHead","className","push","fileName","_jsxFileName","lineNumber","columnNumber","children","id","style","_c","$RefreshReg$"],"sources":["C:/Users/藤澤 良祐/Downloads/研修/learning_fujisawa/webapp/game/src/components/SnakeGame/SnakeBoard.tsx"],"sourcesContent":["import { CELL_SIZE, Position, Direction } from './utils/utils';\r\n\r\n\r\n\r\ninterface GameBoardProps {\r\n    snake: Position[];\r\n    food: Position;\r\n    direction: Direction;\r\n}\r\n\r\nconst SnakeBoard: React.FC<GameBoardProps> = ({snake, food, direction}) => {\r\n    const renderBoard = () => {\r\n        let rows = [];\r\n        for (let row = 0; row < CELL_SIZE; row++) {\r\n            let cells = [];\r\n            for (let col = 0; col < CELL_SIZE; col++) {\r\n                let isSnake = snake.some((s) => s.x === col && s.y === row);\r\n                let isFood = food.x === col && food.y === row;\r\n                let isSnakeHead = snake[0].x === col && snake[0].y === row;\r\n                let className = 'boardBlock ';\r\n\r\n                if (isSnake) {\r\n                    className += 'snake ';\r\n                    if (isSnakeHead) {\r\n                        className += 'snakeHead ';\r\n                        className += direction;\r\n                    }\r\n                }\r\n                else if (isFood) {\r\n                    className += 'food ';\r\n                }\r\n\r\n                cells.push(<div key={`${col}-${row}`} className={className}></div>);\r\n\r\n            }\r\n            rows.push(<div key={row} className=\"rows\" >{cells}</div>);\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    return (\r\n        <div id=\"snakeGameContents\">\r\n            <div id=\"board\" style={{'--cell-size': `${CELL_SIZE*40}px`} as React.CSSProperties}>\r\n                {renderBoard()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SnakeBoard;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAA6B,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/D,MAAMC,UAAoC,GAAGA,CAAC;EAACC,KAAK;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EACvE,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIC,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGT,SAAS,EAAES,GAAG,EAAE,EAAE;MACtC,IAAIC,KAAK,GAAG,EAAE;MACd,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGX,SAAS,EAAEW,GAAG,EAAE,EAAE;QACtC,IAAIC,OAAO,GAAGR,KAAK,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,CAAC,KAAKJ,GAAG,IAAIG,CAAC,CAACE,CAAC,KAAKP,GAAG,CAAC;QAC3D,IAAIQ,MAAM,GAAGZ,IAAI,CAACU,CAAC,KAAKJ,GAAG,IAAIN,IAAI,CAACW,CAAC,KAAKP,GAAG;QAC7C,IAAIS,WAAW,GAAGd,KAAK,CAAC,CAAC,CAAC,CAACW,CAAC,KAAKJ,GAAG,IAAIP,KAAK,CAAC,CAAC,CAAC,CAACY,CAAC,KAAKP,GAAG;QAC1D,IAAIU,SAAS,GAAG,aAAa;QAE7B,IAAIP,OAAO,EAAE;UACTO,SAAS,IAAI,QAAQ;UACrB,IAAID,WAAW,EAAE;YACbC,SAAS,IAAI,YAAY;YACzBA,SAAS,IAAIb,SAAS;UAC1B;QACJ,CAAC,MACI,IAAIW,MAAM,EAAE;UACbE,SAAS,IAAI,OAAO;QACxB;QAEAT,KAAK,CAACU,IAAI,eAAClB,OAAA;UAA2BiB,SAAS,EAAEA;QAAU,GAAtC,GAAGR,GAAG,IAAIF,GAAG,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAAC,CAAC;MAEvE;MACAhB,IAAI,CAACY,IAAI,eAAClB,OAAA;QAAeiB,SAAS,EAAC,MAAM;QAAAM,QAAA,EAAGf;MAAK,GAA7BD,GAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAAC,CAAC;IAC7D;IACA,OAAOhB,IAAI;EACf,CAAC;EAED,oBACIN,OAAA;IAAKwB,EAAE,EAAC,mBAAmB;IAAAD,QAAA,eACvBvB,OAAA;MAAKwB,EAAE,EAAC,OAAO;MAACC,KAAK,EAAE;QAAC,aAAa,EAAE,GAAG3B,SAAS,GAAC,EAAE;MAAI,CAAyB;MAAAyB,QAAA,EAC9ElB,WAAW,CAAC;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACI,EAAA,GArCIzB,UAAoC;AAuC1C,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}